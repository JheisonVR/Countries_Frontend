{"version":3,"sources":["actions/appActions.js","actions/countriesActions.js","actions/filterActions.js","reducer/countryReducer.js","actions/countrieDetail.js","reducer/countryDetailReducer.js","actions/activitiesActions.js","reducer/activitiesReducer.js","reducer/index.js","store.js","components/Loader/Loader.jsx","components/Home/Card.jsx","components/Home/EmptySearch.jsx","components/Home/Cards.jsx","components/Footer/Footer.jsx","components/Home/Home.jsx","components/activities/ActivitiesCreation.jsx","components/layout/Layout.jsx","components/NavBar/Navbar.jsx","components/countryDetail/DetailTouristActivities.jsx","components/countryDetail/CountryDetail.jsx","components/About/About.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_APP_IS_LOADING","setIsLoading","value","type","payload","GET_COUNTRIES","getCountriesList","dispatch","axios","get","then","data","console","log","FILTER_COUNTRIES","CLEAN_FILTER","SORT_COUNTRIESAZ","SORT_COUNTRIESZA","SORT_CONTINENT","FILTER_ACTIVITY","SORT_POPULATION_AZ","SORT_POPULATION_ZA","sortCountriesAZ","sortCountriesZA","cleanFilter","INITIAL_STATE","countries","filteredCountries","sortCountries","GET_DETAIL_COUNTRY","fetchCuntryDetail","id","countryDetail","GET_ACTIVITIES","touristActivities","isLoading","rootReducer","combineReducers","app","state","length","activities","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Loader","Card","name","capital","region","flags","coatOfArms","className","to","map","cap","src","alt","EmptySearch","Cards","useDispatch","useSelector","countriesSort","listCountries","longitud","continents","Array","from","Set","c","useEffect","act","useState","search","setSearch","currentpage","setCurrentPage","resultsFilter","handleNextPage","handlePrevPage","a_z","sort","a","b","z_a","filterContinent","cont","countriesCont","filter","filterTActivities","activity","t","Countries","country","toLowerCase","includes","slice","htmlFor","placeholder","onChange","e","target","con","index","onClick","downToUp","population","upToDown","p","Footer","Home","loading","ActivitiesCreation","countriesList","season","duration","dificulty","description","input","setInput","continent","multiSelectListOne","setmultiSelectListOne","subRegion","multiSelectListTwo","setMultiSelectListTwo","error","setError","keysError","Object","keys","valueError","values","subRegionContinentListF","s","subregion","handleInputChange","checked","errors","test","validatePrueba","action","onSubmit","info","preventDefault","post","alert","required","cols","rows","disabled","i","options","selectedOptions","selected","push","prev","multiple","size","toUpperCase","Layout","Navbar","DetailTouristActivities","TouristActivities","ct","CountryDetail","params","useParams","getDetail","area","toLocaleString","About","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b3c77592.chunk.js","sourcesContent":["export const SET_APP_IS_LOADING= 'app/isLoading';\r\n\r\nexport function setIsLoading(value){\r\n    return{\r\n        type:SET_APP_IS_LOADING,\r\n        payload:value\r\n    }\r\n}","import axios from 'axios';\r\nexport const GET_COUNTRIES = 'get/Country';\r\n\r\nexport function getCountries(value){\r\n    return {\r\n        type: GET_COUNTRIES,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const getCountriesList = ()=> async (dispatch)=> {\r\n    try{\r\n        await axios.get('/countries')\r\n            .then(data => dispatch(getCountries(data.data)))\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n\r\n}","export const FILTER_COUNTRIES = 'filter/countries';\r\nexport const CLEAN_FILTER = 'filter/clean';\r\nexport const SORT_COUNTRIESAZ = 'sortAZ/Countries';\r\nexport const SORT_COUNTRIESZA = 'sortZA/Countries';\r\nexport const SORT_CONTINENT = 'sortContinent/Countries';\r\nexport const FILTER_ACTIVITY = 'filterActivitie/Countries';\r\nexport const SORT_POPULATION_AZ = 'sortPopulationAZ/Countries';\r\nexport const SORT_POPULATION_ZA = 'sortPopulationZA/Countries'\r\n\r\n\r\n\r\nexport function sortCountriesAZ (value){\r\n    return{\r\n        type:SORT_COUNTRIESAZ,\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport function sortCountriesZA (value){\r\n    return{\r\n        type:SORT_COUNTRIESZA,\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport function cleanFilter(){\r\n    return{\r\n        type:CLEAN_FILTER,\r\n        payload:[]\r\n    }\r\n}\r\n\r\nexport function continentFilter(value){\r\n    return{\r\n        type:SORT_CONTINENT,\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport function activitieFilter(value){\r\n    return{\r\n        type: FILTER_ACTIVITY,\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport function populationSortUpToDown(value){\r\n    return{\r\n        type: SORT_POPULATION_ZA,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function populationSortDownToUp(value){\r\n    return{\r\n        type: SORT_POPULATION_AZ,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export function filterCountries(value){\r\n//     return {\r\n//         type:FILTER_COUNTRIES,\r\n//         payload:value\r\n//     }\r\n// }\r\n\r\n// export const fetchFilterCountries = (termino, estado) => (dispatch) =>{\r\n//     if(termino){\r\n//         const terminoFiltrado = estado.filter(element => element.name.toLowerCase().includes(termino.toLowerCase()))\r\n//         dispatch(filterCountries(terminoFiltrado))\r\n//     }else{\r\n//         dispatch(cleanFilter())\r\n//     }\r\n// }\r\n\r\n// export const sortStateAz = (estado, tipo)=> (dispatch)=>{\r\n//     if(tipo === 'ascendente'){\r\n//         const ordenAsc = estado.sort((a,b)=> a.name.localeCompare(b.name))\r\n//         dispatch(sortCountriesAZ(ordenAsc))\r\n//     }\r\n// }\r\n\r\n// export const sortStateAz = (estado)=> (dispatch)=>{\r\n//         const ordenAsc = estado.sort((a,b)=> {\r\n//             if (a.name < b.name) {\r\n//                 return -1;\r\n//             }\r\n//             if (a.name > b.name) {\r\n//                 return 1;\r\n//             }\r\n//             return 0;\r\n//         })\r\n//         dispatch(sortCountriesAZ(ordenAsc))\r\n//     }\r\n\r\n// // export const sortStateZA = (estado, tipo)=> (dispatch)=>{\r\n// //     if(tipo === 'descendente'){\r\n// //         const ordenDesc = estado.sort((a,b)=> b.name.localeCompare(a.name))\r\n// //         dispatch(sortCountriesZA(ordenDesc))\r\n// //     }\r\n// // }\r\n\r\n// export const sortStateZA = (estado)=> (dispatch)=>{\r\n//     const ordenDsc = estado.sort((a,b)=> {\r\n//         if (a.name < b.name) {\r\n//             return 1;\r\n//         }\r\n//         if (a.name > b.name) {\r\n//             return -1;\r\n//         }\r\n//         return 0;\r\n//     })\r\n//     dispatch(sortCountriesZA(ordenDsc))\r\n// }","import {GET_COUNTRIES} from '../actions/countriesActions'\r\nimport { CLEAN_FILTER, FILTER_COUNTRIES, SORT_COUNTRIESAZ, \r\n        SORT_COUNTRIESZA, SORT_CONTINENT, FILTER_ACTIVITY, \r\n        SORT_POPULATION_ZA, SORT_POPULATION_AZ } from '../actions/filterActions'\r\n\r\nconst INITIAL_STATE = {\r\n    countries: [],\r\n    filteredCountries: [],\r\n    sortCountries:[]\r\n}\r\n\r\nexport default function countriesReducer (state=INITIAL_STATE, {type,payload}){\r\n    switch(type){\r\n        case GET_COUNTRIES: {\r\n            return{\r\n                ...state,\r\n                countries: payload\r\n            }\r\n        }\r\n        case FILTER_COUNTRIES: {\r\n            return{\r\n                ...state,\r\n                filteredCountries: payload.length > 0 ? payload : []\r\n            }\r\n        }\r\n        case CLEAN_FILTER: {\r\n            return{\r\n                ...state,\r\n                sortCountries:payload\r\n            }\r\n        }\r\n        case SORT_COUNTRIESAZ: {\r\n            return{\r\n                ...state,\r\n                countries:payload,\r\n                sortCountries:payload\r\n            }\r\n        }\r\n        case SORT_COUNTRIESZA: {\r\n            return{\r\n                ...state,\r\n                countries:payload,\r\n                sortCountries:payload\r\n            }\r\n        }\r\n        case SORT_CONTINENT:{\r\n            return{\r\n                ...state,\r\n                countries:payload,\r\n                sortCountries:payload\r\n            }\r\n        }\r\n        case FILTER_ACTIVITY:{\r\n            return{\r\n                ...state,\r\n                countries:payload,\r\n                sortCountries:payload\r\n            }\r\n        }\r\n        case SORT_POPULATION_AZ:{\r\n            return{\r\n                ...state,\r\n                countries:payload,\r\n                sortCountries:payload\r\n            }\r\n        }\r\n        case SORT_POPULATION_ZA:{\r\n            return{\r\n                ...state,\r\n                countries:payload,\r\n                sortCountries:payload\r\n            }\r\n        } \r\n        default: return state\r\n    }\r\n}\r\n","import axios from \"axios\"\r\nexport const GET_DETAIL_COUNTRY = 'get/CountryDetail'\r\n\r\nexport function getCountryDetail(value){\r\n    return {\r\n        type:GET_DETAIL_COUNTRY,\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport const fetchCuntryDetail = (id) => async (dispatch)=> {\r\n    try{\r\n        await axios.get(`/countries/${id}`)\r\n            .then(data => dispatch(getCountryDetail(data.data)))\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n}","import { GET_DETAIL_COUNTRY } from \"../actions/countrieDetail\";\r\n\r\nconst INITIAL_STATE = {\r\n    countryDetail: []\r\n}\r\n\r\nexport default function countryDetailReducer(state=INITIAL_STATE, {type,payload}) {\r\n    switch(type){\r\n        case GET_DETAIL_COUNTRY:{\r\n            return{\r\n                ...state,\r\n                countryDetail:payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}","import axios from 'axios'\r\nexport const GET_ACTIVITIES = 'get/activities';\r\nexport const POST_ACTIVITIES = 'post/activities'\r\n\r\nexport function getActivities (value){\r\n    return{\r\n        type: GET_ACTIVITIES,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function postActivities (value){\r\n    return{\r\n        type:POST_ACTIVITIES,\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport const postFormActivities = (info)=> async (dispatch)=>{\r\n    await axios.post(`/touristActivities`, info)\r\n        .then(data => dispatch(postActivities(data.data)))\r\n}\r\n\r\nexport const getAllActivities = ()=> async (dispatch) =>{\r\n    await axios.get(`/touristActivities`)\r\n        .then(act => dispatch(getActivities(act.data)))\r\n}\r\n\r\n","import { GET_ACTIVITIES } from \"../actions/activitiesActions\";\r\n\r\nconst INITIAL_STATE = {\r\n    touristActivities : []\r\n}\r\n\r\nexport default function activitiesreducer(state=INITIAL_STATE, {type,payload}){\r\n    switch(type){\r\n        // case POST_ACTIVITIES:{\r\n        //     return{\r\n        //         ...state,\r\n        //         touristActivities:[...state.concat(payload)]\r\n        //     }\r\n        // }\r\n        case GET_ACTIVITIES:{\r\n            return{\r\n                ...state,\r\n                touristActivities:payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { SET_APP_IS_LOADING } from \"../actions/appActions\";\r\nimport countriesReducer from \"./countryReducer\";\r\nimport countryDetailReducer from \"./countryDetailReducer\";\r\nimport activitiesreducer from \"./activitiesReducer\";\r\n\r\nconst INITIAL_STATE = {\r\n    isLoading:false\r\n};\r\n\r\n\r\nfunction appReducer (state=INITIAL_STATE, {type, payload}){\r\n    switch(type){\r\n        case SET_APP_IS_LOADING:{\r\n            return {\r\n                ...state,\r\n                isLoading:payload\r\n            }\r\n        }\r\n    default: return state\r\n    }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    app:appReducer,\r\n    countries: countriesReducer,\r\n    countryDetail:countryDetailReducer,\r\n    activities:activitiesreducer\r\n})","import {legacy_createStore as createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__|| compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);","import React from 'react'\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div>Cargando...</div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Styles/Card.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Card({name, capital, region, flags,id, coatOfArms}) {\r\n  return (\r\n    <div className='cardPrimary'>\r\n        <section className='cardInfo'>\r\n            <Link className='cardTitle' to={`/countries/${id}`}>{name}</Link>\r\n            {capital ?\r\n            capital.map(cap => (<h4 className='cardInfoComplement' key={cap} > Capital: {cap}</h4>))\r\n            : 'Whitout Capital City'\r\n          }\r\n            <h4 className='cardInfoComplement' >Continent: {region} </h4>\r\n        </section>\r\n        <section className='cardImage'>\r\n            <img className='cardFlag' src={flags} alt=\"Flag of Country .png\" />\r\n        </section>\r\n        {/* <section  >\r\n            <img className='cardFlag' src={coatOfArms} alt=\"Coat of arms.svg\" />\r\n        </section> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {CgDanger} from 'react-icons/cg'\r\n\r\nexport default function EmptySearch() {\r\n    return (\r\n        <div>\r\n            <h1><CgDanger/> No Results <CgDanger/> </h1>  \r\n            <h1><CgDanger/> Check the Search <CgDanger/>  </h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Card from './Card'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './Styles/Cards.css'\r\nimport EmptySearch from './EmptySearch'\r\nimport { getCountriesList } from '../../actions/countriesActions'\r\nimport { sortCountriesAZ, sortCountriesZA, cleanFilter, continentFilter, activitieFilter,\r\n  populationSortUpToDown, populationSortDownToUp  } from '../../actions/filterActions'\r\nimport { getAllActivities } from '../../actions/activitiesActions'\r\nimport {MdManageSearch, MdNavigateNext, MdNavigateBefore, MdCleaningServices} from 'react-icons/md'\r\nimport {BiWorld} from 'react-icons/bi'\r\nimport {BsFillEmojiSunglassesFill} from 'react-icons/bs'\r\nimport {GoListOrdered} from 'react-icons/go'\r\n\r\nexport default function Cards() {\r\n  const dispatch = useDispatch();\r\n  const touristActivities = useSelector(state => state.activities.touristActivities)\r\n  const countriesSort = useSelector(state => state.countries.sortCountries);\r\n  const listCountries = useSelector(state => state.countries.countries);\r\n  const longitud = listCountries.length;\r\n  const continents = Array.from(new Set(listCountries.map(c=> c.region)));\r\n\r\n\r\n  useEffect( () => {\r\n    dispatch(getAllActivities())\r\n//eslint-disable-next-line         \r\n},[countriesSort])\r\n  \r\n  const [search, setSearch] = useState('');\r\n  const [currentpage, setCurrentPage] = useState(0)\r\n  \r\n\r\n  let resultsFilter = [];\r\n  !search ? resultsFilter = listCountries.slice(currentpage,currentpage+9)\r\n  : resultsFilter = listCountries.filter(country => \r\n    country.name.toLowerCase().includes(search.toLowerCase()))\r\n\r\n\r\nfunction handleNextPage(){\r\n  currentpage < longitud-9 &&\r\n  setCurrentPage(currentpage+9)\r\n  console.log('El estado es:', currentpage)\r\n  console.log('El Total es:', longitud)\r\n  \r\n}\r\n\r\nfunction handlePrevPage(){\r\n  currentpage > 8 &&\r\n  setCurrentPage(currentpage-9)\r\n  console.log(currentpage)\r\n}\r\n\r\n\r\n  function handleChangeInputPrueba(e){\r\n    //console.log(searched)\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  function cleanInput(){\r\n    setSearch('');\r\n    setCurrentPage(0);\r\n    dispatch(getCountriesList())\r\n  }\r\n\r\n  async function sortAZ(){\r\n    const a_z = listCountries.sort((a,b)=> {\r\n      if (a.name < b.name) {\r\n          return -1;\r\n      }\r\n      if (a.name > b.name) {\r\n          return 1;\r\n      }\r\n      return 0;\r\n    })\r\n    await dispatch(sortCountriesAZ(a_z))\r\n    setCurrentPage(0)\r\n    await dispatch(cleanFilter())\r\n  }\r\n\r\n  async function sortZA(){\r\n    const z_a = listCountries.sort((a,b)=> {\r\n      if (a.name < b.name) {\r\n          return 1;\r\n      }\r\n      if (a.name > b.name) {\r\n          return -1;\r\n      }\r\n      return 0;\r\n    })\r\n    await dispatch(sortCountriesZA(z_a))\r\n    setCurrentPage(0)\r\n    await dispatch(cleanFilter())\r\n  }\r\n\r\n  function filterContinent(cont){\r\n    const countriesCont = listCountries.filter(c => c.region === cont)\r\n    dispatch(continentFilter(countriesCont));\r\n    dispatch(cleanFilter());\r\n    setCurrentPage(0)\r\n  }\r\n\r\n  function filterTActivities(activity){\r\n    const resultsFilter = touristActivities.filter(t => t.name === activity)\r\n    const countries =  resultsFilter[0].Countries\r\n    dispatch(activitieFilter(countries))\r\n  }\r\n\r\n  function sortPopulationUpToDown(){\r\n    const upToDown = listCountries.sort((a,b)=> {\r\n      if (a.population < b.population) {\r\n        return 1;\r\n    }\r\n      if (a.population > b.population) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n    })\r\n    dispatch(populationSortUpToDown(upToDown))\r\n    setCurrentPage(0)\r\n    dispatch(cleanFilter())\r\n  }\r\n\r\n  function sortPopulationDownToUp(){\r\n    const downToUp = listCountries.sort((a,b)=> {\r\n      if (a.population < b.population) {\r\n        return -1;\r\n      }\r\n      if (a.population > b.population) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    })\r\n    dispatch(populationSortDownToUp(downToUp))\r\n    setCurrentPage(0)\r\n    dispatch(cleanFilter())\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='CardsMainContainer'>\r\n      <section className='filters'>\r\n        <article className='FilterContainSearch'>\r\n          <label htmlFor=\"test\"><MdManageSearch/> Country Search</label>\r\n          <input value={search} type=\"text\" id='test' placeholder='Country Name...' onChange={handleChangeInputPrueba} />\r\n        </article>\r\n\r\n        <article className='filterContinentMain'>\r\n          <h1 className='filterContinentTitle'><BiWorld/> Continents</h1>\r\n          {\r\n            continents.map((con, index) =>(\r\n              <button key={index} onClick={()=> filterContinent(con)}>{con}</button>\r\n            ))\r\n          }\r\n        </article>\r\n\r\n        <article className='filterContinentMain' >\r\n        <h1 className='filterContinentTitle'><BsFillEmojiSunglassesFill/> Tourist Activities</h1>\r\n          {/* <p className='textFilterTA'>Tourist Activities</p> */}\r\n          {touristActivities.length>0 ? \r\n            <article className='filterContinentMain'>\r\n              {touristActivities.map((t) => (\r\n                <button onClick={()=> filterTActivities(t.name)} key={t.id}>{t.name}</button>))}\r\n            </article>\r\n          :\r\n          <p className='textFilterTA'>No hay actividades creadas</p>\r\n          }\r\n        </article>\r\n\r\n        <article className='filterContinentMain'>\r\n          <h1 className='filterContinentTitle'><GoListOrdered/> Order</h1>\r\n          <h1 className='filterContinentTitle'>Alphabetical</h1>\r\n          <button onClick={sortAZ} >A-Z</button>\r\n          <button onClick={sortZA} >Z-A</button>\r\n          <h1 className='filterContinentTitle'>Amount of Population</h1>\r\n          <button onClick={sortPopulationDownToUp}>Down to Up</button>\r\n          <button onClick={sortPopulationUpToDown}>Up to Down</button>\r\n        </article>\r\n\r\n        <article className='filterContinentMain'>\r\n          <h1 className='filterContinentTitle'>Clean Filters</h1>\r\n          <button onClick={cleanInput}><MdCleaningServices/> Clean</button>\r\n        </article>\r\n      </section>\r\n\r\n{/*       ------------------------------------------          */}\r\n\r\n        { resultsFilter.length ? \r\n        \r\n          <article className='matrizCards'>\r\n            <article className='filterPagesMain'>\r\n              <h1 className='filterPagesTitle'><GoListOrdered/>Pages</h1>\r\n              <button className='filterPageNext' onClick={handlePrevPage} ><MdNavigateBefore/> Prev</button>\r\n              <button className='filterPagePrev' onClick={handleNextPage} >Next <MdNavigateNext/></button>\r\n            </article>\r\n            {resultsFilter.map(p=> (\r\n                <Card\r\n                    key={p.id}\r\n                    name={p.name}\r\n                    capital= {p.capital}\r\n                    region= {p.region}\r\n                    flags= {p.flags}\r\n                    id={p.id}\r\n                    population={p.population}\r\n                    coatOfArms={p.coatOfArms}              \r\n                />                \r\n            ))}\r\n          <article className='filterPagesMain'>\r\n            <h1 className='filterPagesTitle'><GoListOrdered/>Pages</h1>\r\n            <button className='filterPageNext' onClick={handlePrevPage} ><MdNavigateBefore/> Prev</button>\r\n            <button className='filterPagePrev' onClick={handleNextPage} >Next <MdNavigateNext/></button>\r\n          </article>\r\n          </article>  \r\n          :\r\n          <article>\r\n            <EmptySearch/>\r\n          </article>\r\n        }\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {AiFillCopyrightCircle} from 'react-icons/ai'\r\nimport './Footer.css'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className='footerMain'>\r\n        <h1 className='footerText'><AiFillCopyrightCircle/> Countries - Henry PI</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Loader from '../Loader/Loader'\r\nimport { setIsLoading } from '../../actions/appActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCountriesList } from '../../actions/countriesActions'\r\nimport Cards from './Cards'\r\nimport './Styles/Home.css'\r\nimport Footer from '../Footer/Footer'\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.app.isLoading)\r\n\r\n    useEffect( () => {\r\n        const listCountries = async ()=>{\r\n            dispatch(setIsLoading(true))\r\n            await dispatch(getCountriesList());\r\n            dispatch(setIsLoading(false))\r\n        }\r\n        listCountries();\r\n    },[dispatch])\r\n\r\n    return (\r\n        <div>\r\n            {loading? <Loader/> :\r\n            <section className='homeMainContainer' >\r\n                <section>\r\n                    <Cards/>\r\n                </section>\r\n                <section>\r\n                    <Footer/>\r\n                </section>\r\n            </section>\r\n            }      \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {useDispatch} from 'react-redux';\r\nimport { postFormActivities } from '../../actions/activitiesActions';\r\nimport { setIsLoading } from '../../actions/appActions';\r\nimport { getCountriesList } from '../../actions/countriesActions';\r\nimport Footer from '../Footer/Footer';\r\nimport Loader from '../Loader/Loader';\r\nimport './Styles/formCreation.css'\r\n\r\nexport default function ActivitiesCreation() {\r\n    const dispatch = useDispatch()\r\n    const countriesList = useSelector(state => state.countries.countries);\r\n    const loading = useSelector(state => state.app.isLoading);\r\n    const continents = Array.from(new Set(countriesList.map(c=> c.region))).sort();\r\n    //const subregionContinent = Array.from(new Set(countriesList.map(c=> c.subregion))).sort();\r\n\r\n    \r\n    useEffect( () => {\r\n        const listCountries = async ()=>{\r\n            dispatch(setIsLoading(true))\r\n            await dispatch(getCountriesList());\r\n            dispatch(setIsLoading(false))\r\n        }\r\n        listCountries();\r\n    },[dispatch])\r\n    \r\n    const [input, setInput] = useState({\r\n        name:'',\r\n        season:'',\r\n        duration:'',\r\n        dificulty:'',\r\n        countries:[],\r\n        description:''\r\n\r\n    });\r\n    const [multiSelectListOne, setmultiSelectListOne] = useState({\r\n        continent:''\r\n    })\r\n\r\n    const [multiSelectListTwo, setMultiSelectListTwo] = useState({\r\n        subRegion:''\r\n    })\r\n\r\n    const [error, setError] = useState('')\r\n    const keysError = Object.keys(error)\r\n    const valueError = Object.values(error)\r\n\r\n    \r\n\r\n    function multiListOnchangeOne(e){\r\n        const {value,name} = e.target\r\n        const data = {...multiSelectListOne, [name]:value }\r\n        setmultiSelectListOne(data)\r\n        setMultiSelectListTwo('')\r\n    }\r\n\r\n    function multiListOnchangeTwo(e){\r\n        const {value,name} = e.target\r\n        const data = {...multiSelectListTwo, [name]:value }\r\n        setMultiSelectListTwo(data)\r\n    }\r\n\r\n    const subRegionContinentListF = Array.from(new Set(countriesList.filter(s=> s.region === multiSelectListOne.continent)\r\n    .map(c => c.subregion).sort()))\r\n\r\n\r\n    function validatePrueba(input){\r\n        let errors = {};\r\n        if(!input.name){\r\n            errors.name = 'Campo requerido no puede estar vacio'\r\n        }else if(!/^[a-zA-Z\\s]*$/.test(input.name)){\r\n            errors.name = 'Solo puede ingresar letras, no debe ingresar numeros ni caracteres especiales'\r\n        }\r\n        if(!input.duration){\r\n            errors.duration = 'Debe ingresar los minutos que toma la actividad'\r\n        }else if(input.duration > 360){\r\n            errors.duration = 'La actividad no puede durar mas de 340 minutos'\r\n        }else if(!/^[0-9]*$/.test(input.duration)){\r\n            errors.duration = 'Solo puede ingresar numeros'\r\n        }\r\n        if(!input.dificulty){\r\n            errors.dificulty = 'Debe seleccionar la dificultad de la actividad'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    const  handleInputChange = (e)=> {\r\n        const {name, value, type, checked} = e.target;\r\n        const data = {...input, [name]: type === 'checkbox' ? checked : value }\r\n        setInput(data)\r\n        setError(validatePrueba(data))\r\n    }\r\n\r\n    const handleChangeSelectMultiple = (e)=> {\r\n        let options = e.target.options;\r\n        let selectedOptions = [];\r\n        for (let i=0; i<options.length; i++){\r\n            if(options[i].selected){\r\n                selectedOptions.push(options[i].value);\r\n            }\r\n        }\r\n        setInput(prev => ({\r\n            ...prev,\r\n            countries: selectedOptions\r\n        }))\r\n    }\r\n\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        console.log(input)\r\n        setInput({\r\n            name:'',\r\n            id:'',\r\n            season:'',\r\n            duration:'',\r\n            description:'',\r\n            dificulty:'',     \r\n        })\r\n        dispatch(postFormActivities(input))\r\n        alert('Activity created successfully')\r\n    }\r\n\r\nreturn (\r\n    <div>\r\n        <h1>Tourist Activity</h1>\r\n        <form className='formulario' action=\"\" onSubmit= {handleSubmit}>\r\n\r\n            <fieldset>\r\n                <legend>General</legend>\r\n                <label className='labelInput' htmlFor=\"name\">Enter the name of the tourist activity</label>\r\n                <input type=\"text\" key='name' name= 'name' value={input.name} required id='name' onChange={handleInputChange} placeholder='Activity...' />\r\n                {!error.name ? null : <span className='danger' >{error.name}</span>}\r\n\r\n                <label className='labelInput' htmlFor=\"description\">Briefly describe the tourist activity</label>\r\n                <textarea name='description' key='description' value={input.description} id='description' cols='80' rows='5' onChange={handleInputChange} ></textarea>  \r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <legend>Details</legend>\r\n                <label className='labelInput' htmlFor='season'>Select the best season to carry out the tourist activity</label>\r\n                <select id='season' name=\"season\" key='season' value={input.season} onChange={handleInputChange} >\r\n                    <option disabled      value=''      >Season</option>\r\n                    <option name='Summer' value='Summer'>Summer</option>\r\n                    <option name='Winter' value='Winter'>Winter</option>\r\n                    <option name='Spring' value='Spring'>Spring</option>\r\n                    <option name='Autumn' value='Autumn'>Autumn</option>\r\n                </select>\r\n\r\n                <label className='labelInput' htmlFor=\"dificulty\">Select the difficulty level</label>\r\n                <select name='dificulty' id='dificulty' key='dificulty' value={input.dificulty} onChange={handleInputChange} >                    \r\n                    <option value='' disabled >Level</option>\r\n                    <option value=\"1\">Very Low</option>\r\n                    <option value=\"2\">Low</option>\r\n                    <option value=\"3\">Middle</option>\r\n                    <option value=\"4\">High</option>\r\n                    <option value=\"5\">Very High</option>\r\n                </select>\r\n                {!error.dificulty ? null : <span className='danger' >{error.dificulty}</span>}\r\n    \r\n                <label className='labelInput' htmlFor=\"duration\">Enter the duration of the tourist activity in minutes</label>\r\n                <input type=\"text\" value={input.duration} name='duration' id='duration' placeholder='Minutes...' onChange={handleInputChange} />\r\n                {!error.duration ? null : <span className='danger'>{error.duration}</span>}\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <legend>Countries</legend>\r\n\r\n                <label className='labelInput' htmlFor=\"continentInput\">select a continent</label>\r\n                <select name=\"continent\" id='continentInput' key='continent' value={multiSelectListOne.continent} onChange={multiListOnchangeOne}>\r\n                <option value='' disabled >Continent</option>\r\n                    {continents.map((c,i) => (\r\n                        <option key={i} value={c}>{c}</option>\r\n                    ))}\r\n                </select>\r\n\r\n                <label className='labelInput' htmlFor=\"subRegionInput\">select a region</label>\r\n                {subRegionContinentListF ? \r\n\r\n                <select name=\"subRegion\" id='subRegionInput' key='subRegion' value={multiSelectListTwo.subRegion} onChange={multiListOnchangeTwo}>\r\n                    <option value='' >Region</option>\r\n                    {subRegionContinentListF.map((s,i) => (\r\n                        <option key={i} value={s}>{s}</option>\r\n                    ))}\r\n                </select>                 \r\n                :\r\n                'Select a Continent'\r\n                }\r\n\r\n                <label className='labelInput' htmlFor=\"countries\">Select the countries in which the tourist activity can be carried out</label>\r\n                {!loading ? \r\n                <select key='countries' name=\"countries\" id=\"countries\" onChange={handleChangeSelectMultiple} multiple size=\"5\">\r\n                    {countriesList.filter(c=> multiSelectListTwo.subRegion  ? \r\n                                            c.region === multiSelectListOne.continent && c.subregion === multiSelectListTwo.subRegion\r\n                                            :c.region === multiSelectListOne.continent).map(c=> (\r\n                        <option key={c.id} name={c.name} value={c.id}>{c.name}</option>\r\n                        ))}\r\n                </select>\r\n                : <Loader/>}\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                { !valueError.length >0 ? <input type=\"submit\" value='Crear Actividad' /> : \r\n                <h2>Please review the following fields {keysError.map((e,i) => (\r\n                    <li key={i} >{e.toUpperCase()}</li>\r\n                ))}</h2>\r\n                }\r\n            </fieldset>\r\n\r\n        </form>\r\n        <Footer/>\r\n        {/* <div>\r\n            <input type='checkbox' name='hard' id='inputDificultyHard' checked={input.hard} onChange={handleInputChange}  />\r\n            <label htmlFor=\"inputDificultyHard\">hard</label>\r\n        </div> */}\r\n    </div>    \r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Styles/layout.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Layout() {\r\n  return (\r\n    <div className='principalContainer' >\r\n        <h1 className='title'>Proyecto Individual Henry Countries</h1>\r\n        <Link to='/home'>\r\n          <button>Home</button>\r\n        </Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Styles/navbar.css'\r\nimport {GoHome} from 'react-icons/go'\r\nimport {GiDetour} from 'react-icons/gi'\r\nimport {FcAbout} from 'react-icons/fc'\r\n\r\nexport default function Navbar() {\r\n\r\n  return (\r\n    <div className='navbarMainContainer' >\r\n        <section className='navButtons'>          \r\n          <Link className='linkNav' to='/home'> <GoHome/> Home</Link>\r\n          <Link className='linkNav' to='/activities'><GiDetour/> Activities</Link>\r\n          <Link className='linkNav' to='/about'><FcAbout/> About</Link>\r\n        </section>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './Styles/DetailAT.css'\r\n\r\nexport default function DetailTouristActivities() {\r\n    const countryDetail = useSelector(state => state.countryDetail.countryDetail)\r\n\r\n    return (\r\n        <div className='mainDetailTA'>\r\n            {countryDetail.TouristActivities && countryDetail.TouristActivities.length > 0 ?\r\n                <article>\r\n                    {countryDetail.TouristActivities.map(ct =>(\r\n                        <fieldset className='detailTAMain' >\r\n                            <legend>Tourist Activities</legend>\r\n                            <h2>Activity: {ct.name} </h2>\r\n                            <h2>Dificulty: {ct.dificulty}</h2>\r\n                            <h2>Duration: {ct.duration} minutes</h2>\r\n                            <h2>Season: {ct.season}</h2>\r\n                        </fieldset>\r\n                    ))}\r\n                </article>\r\n            : \r\n            <fieldset className='detailTAMain' >\r\n                <legend>Tourist Activities</legend>\r\n                <h1>No hay actividades turisticas para este pais</h1>\r\n                <Link to='/activities'>Crear Actividad</Link>                \r\n            </fieldset>\r\n            // : \r\n            // <fieldset className='detailTAMain' >\r\n            //     <legend>Tourist Activities</legend>\r\n            //     <h1>No hay actividades turisticas para este pais</h1>\r\n            //     <Link to='/activities'>Crear Actividad</Link>                \r\n            // </fieldset>\r\n            } \r\n        </div>\r\n    )\r\n    }\r\n","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport Loader from '../Loader/Loader'\r\nimport { setIsLoading } from '../../actions/appActions';\r\nimport { fetchCuntryDetail } from '../../actions/countrieDetail';\r\nimport DetailTouristActivities from './DetailTouristActivities';\r\nimport './Styles/DetailCountry.css'\r\nimport Footer from '../Footer/Footer'\r\nimport {GiCapitol, GiMountains} from 'react-icons/gi'\r\nimport {BiWorld} from 'react-icons/bi'\r\nimport {RxRulerSquare} from 'react-icons/rx'\r\nimport {IoIosPeople} from 'react-icons/io'\r\n\r\n\r\n\r\nexport default function CountryDetail() {\r\n    let params = useParams();\r\n    const dispatch = useDispatch()\r\n    const countryDetail = useSelector(state => state.countryDetail.countryDetail)\r\n\r\n    useEffect(()=>{\r\n      const getDetail = async ()=>{\r\n        dispatch(setIsLoading(true))\r\n        await dispatch(fetchCuntryDetail(params.id))\r\n        dispatch(setIsLoading(false))\r\n      }\r\n      getDetail()\r\n      //eslint-disable-next-line \r\n    },[])\r\n\r\n    // const handleClic = () =>{\r\n    //   console.log(params)\r\n    // }\r\n\r\n  return (\r\n    <div >\r\n      {countryDetail ? \r\n        <section className='detailMainContainer'>\r\n\r\n          <article className='detailImage'>\r\n            <img className='flag' src={countryDetail.flags} alt=\"flag_Country\" />          \r\n          </article>\r\n\r\n          <article className='detailShield'>\r\n            {countryDetail.coatOfArms && <img className='shield' src={countryDetail.coatOfArms} alt='coatOfArms'/> }\r\n          </article>\r\n\r\n\r\n          <article className='detailTitle'>\r\n            <h1>{countryDetail.name}</h1>\r\n          </article>\r\n\r\n          <fieldset className='stadisticsMain' >\r\n            <legend>Stadistics</legend>\r\n            <article className='detailLocation'>\r\n                <h2><GiCapitol/> Capital: {countryDetail.capital} </h2>  \r\n                <h2><BiWorld/>  Continent: {countryDetail.region}</h2>\r\n                <h2> <GiMountains/>  Subregion: {countryDetail.subregion}</h2>              \r\n            </article>\r\n            <article className='detailExtension'>\r\n              <h2> <RxRulerSquare/> Area: {countryDetail.area && countryDetail.area.toLocaleString('en-US')} Km²</h2>\r\n              <h2> <IoIosPeople/> Poblation: {countryDetail.population && countryDetail.population.toLocaleString('en-US')} personas</h2>\r\n              {/* <button onClick={handleClic}>Clic</button> */}\r\n            </article>\r\n          </fieldset>\r\n          \r\n          <article className='detailActivitiesMainContainer' >\r\n            <DetailTouristActivities />\r\n          </article>\r\n        </section>\r\n      : <Loader/> \r\n      }\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport Footer from '../Footer/Footer'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n        <h1>About</h1>\r\n        <p>This is a Individual Henry´s FullStack Developer Project</p>\r\n        <Footer/>   \r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport ActivitiesCreation from './components/activities/ActivitiesCreation';\nimport Layout from './components/layout/Layout';\nimport Navbar from './components/NavBar/Navbar';\nimport CountryDetail from './components/countryDetail/CountryDetail';\nimport About from './components/About/About';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Routes>\n        <Route path='/' element={<Layout/>} />\n        <Route path='/home' element={<Home/>} />\n        <Route path='activities' element={<ActivitiesCreation/>} />\n        <Route path='/countries/:id' element={<CountryDetail/>} />\n        <Route path='/about' element={<About/>}/>\n      </Routes>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {store} from './store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios'\n\n//axios.defaults.baseURL = 'http://localhost:3001';\naxios.defaults.baseURL = 'https://countriesbackend-production-111d.up.railway.app/';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter> \n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}